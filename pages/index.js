import React, { useEffect, useState } from 'react';
import axios from 'axios';
import Head from 'next/head';
import Image from 'next/image';
import Card from '../components/Card';

const url = `https://jsonplaceholder.typicode.com`;
const fetchAxiosData = (path) =>
  axios
    .get(`${url}/${path}`)
    .then(({ data }) => data)
    .catch((response) => Promise.reject(response));

export default function Home(props) {
  //State
  const [data, setData] = useState([]);
  const [error, setError] = useState(null);
  const [isFetching, setIsFetching] = useState(false);

  //Get Users
  useEffect(() => {
    const fetchData = async () => {
      setIsFetching(true);
      try {
        const [users, posts] = await Promise.all([
          fetchAxiosData('users'),
          fetchAxiosData('posts'),
        ]);

        setError(null);
        setData(
          users.map((user) => ({
            ...user,
            posts: posts.filter(({ userId }) => userId === user.id),
          }))
        );
      } catch (err) {
        setError(err);
      }
      setIsFetching(false);
    };

    fetchData();
  }, []);

  if (isFetching) return <span>Loading..</span>;
  if (error) return <h1>Error!</h1>;

  return (
    <div>
      <Head>
        <title>Create Next App</title>
        <meta
          name='description'
          content='Generated by create next app'
        />
        <link rel='icon' href='/favicon.ico' />
      </Head>

      <main className='container'>
        <table className='rwd-table'>
          <thead>
            <tr>
              <th>id</th>
              <th>name</th>
              <th>username</th>
              <th>post-userId</th>
              <th>messages</th>
            </tr>
          </thead>
          <tbody>
            {data.map((user) => (
              <tr key={user.id}>
                <td>{user.id}</td>
                <td>{user.name}</td>
                <td>{user.username}</td>
                <td>{user.posts.length}</td>
                {/* <td>
                  {user.posts.map(({ title }) => title).join(', ')}
                </td> */}
                <td>
                  {user.posts.map(({ title, body, id }) => (
                    <Card key={id} title={title} body={body} />
                  ))}
                </td>

                {/* <td>

                  <Card
                    body={user.posts.map(({ title, body, id }) => (
                      <>
                        <tr key={id}>
                          <td>{title}</td>
                          <td>{body}</td>
                        </tr>
                        <button>modifier</button>
                        <button>supprimer</button>
                      </>
                    ))}
                  />
                </td> */}
              </tr>
            ))}
          </tbody>
        </table>
      </main>

      <footer>
        {/* <a
          href='https://vercel.com?utm_source=create-next-app&utm_medium=default-template&utm_campaign=create-next-app'
          target='_blank'
          rel='noopener noreferrer'
        >
          Powered by{' '}
          <span className={styles.logo}>
            <Image
              src='/vercel.svg'
              alt='Vercel Logo'
              width={72}
              height={16}
            />
          </span>
        </a> */}
      </footer>
    </div>
  );
}
